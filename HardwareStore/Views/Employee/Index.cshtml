@model PaginationResponse<HardwareStore.Data.Entities.Employee>
@{
    ViewData["Title"] = "Empleados";
}

<div class="container mt-5">
    <div class="card">
        <div class="card-body">
            <h2 class="text-center mb-4">Lista de Empleados</h2>
            <div class="row justify-content-between mb-3">
                <div class="col-lg-6">
                    <button class="btn btn-primary" onclick="window.location.href='/Employee/Create'">Nuevo Empleado</button>
                </div>
                <div class="col-lg-6">
                    <form class="form-inline justify-content-end" asp-action="Index" method="GET">
                        <input type="hidden" name="Page" value="@Model.CurrentPage" />
                        <input type="hidden" name="RecordsPerPage" value="@Model.RecordsPerPage" />
                        <div class="input-group">
                            <input type="text" class="form-control" placeholder="Buscar..." aria-label="Search" asp-for="Filter" name="Filter">
                            <div class="input-group-append">
                                <button class="btn btn-primary" type="submit">
                                    <i class="bi bi-search"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>

            @if (Model != null && Model.List != null && Model.List.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover">
                        <thead class="thead-light">
                            <tr>
                                <th>Nombre</th>
                                <th>Apellido</th>
                                <th>Edad</th>
                                <th>Activo</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.List)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.FirstName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.LastName)</td>
                                    <td>@Html.DisplayFor(modelItem => item.Age)</td>
                                    <td>@Html.DisplayFor(modelItem => item.IsActive)</td>
                                    <td>
                                        <div class="btn-group" role="group" aria-label="Acciones">
                                            <a class="btn btn-sm btn-info" asp-action="Edit" asp-route-id="@item.Id">Editar</a>
                                            <button class="btn btn-sm btn-danger btnDelete" type="button" data-id="@item.Id">Eliminar</button>
                                            <form asp-action="Delete" method="post" class="deleteForm" data-id="@item.Id">
                                                <input type="hidden" name="id" value="@item.Id" />
                                            </form>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="alert alert-danger" role="alert">
                    Ocurrió un error al obtener la lista de empleados.
                </div>
            }

            @* Pagination *@
            <nav aria-label="Page navigation example">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                        <a class="page-link" href="/Employee/Index?page=1&RecordsPerPage=@Model.RecordsPerPage&Filter=@Model.Filter" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    @foreach (var pageNumber in Model.Pages)
                    {
                        <li class="page-item @(Model.CurrentPage == pageNumber ? "active" : "")">
                            <a class="page-link" href="/Employee/Index?page=@(pageNumber)&RecordsPerPage=@Model.RecordsPerPage&Filter=@Model.Filter">@pageNumber</a>
                        </li>
                    }
                    <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" href="/Employee/Index?page=@Model.TotalPages&RecordsPerPage=@Model.RecordsPerPage&Filter=@Model.Filter" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('.btnDelete').click(function () {
                var id = $(this).data('id');
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: '¡No podrás revertir esto!',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Sí, eliminarlo!'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $('.deleteForm[data-id="' + id + '"]').submit();
                    }
                });
            });
        });
    </script>
}
